<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    <!-- Configure iisnode -->
    <iisnode nodeProcessCommandLine="C:\Program Files\nodejs\node.exe" node_env="%NODE_ENV%" nodeProcessCountPerApplication="1" maxConcurrentRequestsPerProcess="1024" watchedFiles="server.js;web.config;routes\*.js;models\*.js;config\*.js;middleware\*.js" loggingEnabled="true" logDirectory="iisnode" debuggingEnabled="false" devErrorsEnabled="true" />
      
    <handlers>
      <add name="OptionsHandler" verb="OPTIONS" path="*" modules="ProtocolSupportModule" resourceType="Unspecified" requireAccess="Script" />
      <!-- Other handlers... -->
      <add name="iisnode" path="server/server.js" verb="*" modules="iisnode" />
    </handlers>
    
    <rewrite>
      <rules>
        <!-- Don't interfere with iisnode internal paths -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^server/server.js\/debug[\/]?" />
        </rule>
        
        <!-- iisnode logs should not be accessible via browser -->
        <rule name="LoggerRule" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^iisnode[\\/]?" />
          <action type="CustomResponse" statusCode="403" statusReason="Forbidden" statusDescription="Logs not accessible" />
        </rule>
        
        <!-- API requests go to server.js -->
        <rule name="APIRule" stopProcessing="true">
          <match url="^api(\/.*)" />
          <action type="Rewrite" url="server/server.js" />
        </rule>
        
        <!-- Static content in the client/build folder -->
        <rule name="StaticContent" stopProcessing="true">
          <match url=".*" />
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" />
            <add input="{REQUEST_FILENAME}" pattern="\\server\\(?!server.js).*$" negate="true" />
          </conditions>
          <action type="Rewrite" url="{REQUEST_URI}" />
        </rule>
        
        <!-- For client-side routing - all other requests go to index.html -->
        <rule name="ReactRouter" stopProcessing="true">
          <match url=".*" />
          <conditions>
            <add input="{REQUEST_URI}" pattern="^/api(/|$)" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
          </conditions>
          <action type="Rewrite" url="client/build/index.html" />
        </rule>
        
        <!-- If nothing matched, try server.js as a fallback -->
        <rule name="FallbackToNode" stopProcessing="true">
          <match url=".*" />
          <action type="Rewrite" url="server/server.js" />
        </rule>
      </rules>
    </rewrite>
    
    <!-- Make sure errors are not hidden -->
    <httpErrors existingResponse="PassThrough" />
    
    <!-- Disable directory browsing -->
    <directoryBrowse enabled="false" />
        <httpProtocol>
            <customHeaders>
                <add name="X-Content-Type-Options" value="nosniff" />
                <add name="X-Frame-Options" value="SAMEORIGIN" />
                <add name="X-XSS-Protection" value="1; mode=block" />
                <add name="Access-Control-Allow-Origin" value="*" />
                <add name="Access-Control-Allow-Headers" value="Content-Type, x-auth-token, Authorization" />
                <add name="Access-Control-Allow-Methods" value="GET, POST, PUT, DELETE, OPTIONS" />
                <add name="Access-Control-Allow-Credentials" value="true" />
            </customHeaders>
        </httpProtocol>
        <security>
            <requestFiltering>
                <verbs>
                    <add verb="OPTIONS" allowed="true" />
                </verbs>
            </requestFiltering>
        </security>
  </system.webServer>
  
  <system.web>
    <compilation debug="false" />
  </system.web>
  
  <!-- Define environment variables -->
  <appSettings>
    <add key="NODE_ENV" value="production" />
    <add key="PORT" value="8080" />
    <!-- Don't put sensitive values here; use .env file -->
  </appSettings>
</configuration>